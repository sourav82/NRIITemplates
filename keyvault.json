{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "rglocation": {
           "type": "string",
           "metadata": {
                "description": "Location of the key vault"
            }
        },
        "environment": {
           "type": "string",
           "metadata": {
                "description": "Environment for which the key vault is being created"
            }
        },
        "project": {
           "type": "string",
           "metadata": {
                "description": "Workstream for which this is being deployed"
            }
        },
        "application": {
           "type": "string",
           "metadata": {
                "description": "The application which can have access to this key vault"
            }
        },
        "keyVauleSkuName": {
           "type": "string",
           "metadata": {
                "description": "Sku name for the key vault"
            },
            "allowedValues": [
                "Standard",
                "Premium"
            ]
        },
        "keyVaultAccessPolicyObjId": {
           "type": "string",
           "metadata": {
                "description": "Object Id for key vault access policy"
            }
        }
    },
    "functions": [],
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[concat('kvii', parameters('application'), parameters('environment'), parameters('project'))]",
            "location": "[parameters('rgLocation')]",
            "tags": {
                "Environment-Type": "[parameters('environment')]",
                "Project": "[parameters('project')]"
            },
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "[parameters('keyVauleSkuName')]"
                },
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('keyVaultAccessPolicyObjId')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny"
                }
            }
        }
    ],
    "outputs": {}
}