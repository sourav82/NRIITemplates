{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2019-Datacenter",
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v3",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "vmName": {
       "type": "string",
       "metadata": {
            "description": "Name of the virtual machine"
        }
    },
    "subnetRef": {
       "type": "string",
       "metadata": {
            "description": "Reference to the subnet where the vm to be deployed"
        }
    },
    "rgLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "application": {
       "type": "string",
       "metadata": {
            "description": "Name of the application"
        }
    },
    "environment": {
       "type": "string",
       "metadata": {
            "description": "Environment of the deployment"
        }
    },
    "project": {
       "type": "string",
       "metadata": {
            "description": "Project name for the deployement"
        }
    }
  },
  "variables": {
    "storageAccountName": "[concat('stgii', parameters('application'), parameters('environment'), parameters('project'), uniquestring(resourceGroup().id))]",
    "nicName": "[concat('nicii', parameters('application'), parameters('environment'), parameters('project'), uniquestring(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-11-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('rgLocation')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-12-01",
      "name": "[variables('nicName')]",
      "location": "[parameters('rgLocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat('ipconfigii', parameters('application'), parameters('environment'), parameters('project'), uniquestring(resourceGroup().id), '-vm')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetRef')]"
              }
            }
          }
        ]
      }
    },    
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('rgLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      }
    }
  ],
  "outputs": {}
}