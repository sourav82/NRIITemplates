{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "rgName": {
      "type": "string",
       "metadata": {
            "description": "Name of the resource group"
        }
    },
    "rgLocation": {
      "type": "string",
       "metadata": {
            "description": "Location of the resource group"
        }
    },
    "environment": {
      "type": "string",
       "metadata": {
            "description": "Environment of the resource roup"
        }
    },
    "storageTemplateUri": {
       "type": "string",
       "metadata": {
            "description": "Linked template URI for storage account"
        }
    },
    "virtualNetworkTemplateUri": {	
       "type": "string",	
       "metadata": {	
            "description": "Linked template for virtual network"	
        }	
    },	
    "privateLinkTemplateUri": {	
       "type": "string",	
       "metadata": {	
            "description": "Linked template for private link deployment"	
        }	
    },	
    "privateLinkDnsTemplateuri": {	
       "type": "string",	
       "metadata": {	
            "description": "Linked template for private link dns deployment"	
        }	
    },	
    "keyVaultTemplateUri": {
       "type": "string",
       "metadata": {
            "description": "Linked template for key vault deployment"
        }
    },
    "sqlDatabaseTemplateUri": {
       "type": "string",
       "metadata": {
            "description": "Sql database linked template for deployment"
        }
    },     
    "virtualMachineDeploymentUri": {
       "type": "string",
       "metadata": {
            "description": "Virtual machine linked template deployment"
        }
    },
    "keyVaultAccessPolicyObjId": {
        "type": "string",
        "metadata": {
            "description": "Object Id for key vault access policy"
        }
    },   
    "vnetName": {	
       "type": "string",	
       "metadata": {	
            "description": "Name of virtual network"	
        }	
    },	
    "vnetAddressCIDR": {	
       "type": "string",	
       "metadata": {	
            "description": "CIDR of the IP segment for the virtual network"	
        }	
    },	
    "storageprivateLinkSubnetName": {	
       "type": "string",	
       "metadata": {	
            "description": "name of the subnet containing private link for storage"	
        }	
    },	
    "storageprivateLinkSubnetCIDR": {	
       "type": "string",	
       "metadata": {	
            "description": "CIDR IP segment for private link subnet fir storage"	
        }	
    },	
    "storageprivateEndpointName": {	
       "type": "string",	
       "metadata": {	
            "description": "Name of private endpoint for storage"	
        }	
    },
    "sqlprivateEndpointName": {	
       "type": "string",	
       "metadata": {	
            "description": "Name of private endpoint for sql database"	
        }	
    },	
    "storageprivateEndpointConnectionName": {	
       "type": "string",	
       "metadata": {	
            "description": "Name of private endpoint connection for storage"	
        }	
    },	
    "sqlprivateEndpointConnectionName": {	
       "type": "string",	
       "metadata": {	
            "description": "Name of private endpoint connection for sql database"	
        }	
    },
    "sqlprivateLinkSubnetName": {	
       "type": "string",	
       "metadata": {	
            "description": "name of the subnet containing private link for sql server"	
        }	
    },	
    "sqlprivateLinkSubnetCIDR": {	
       "type": "string",	
       "metadata": {	
            "description": "CIDR IP segment for private link subnet for sql database"	
        }	
    },    	    
    "vmSubnetName": {	
       "type": "string",	
       "metadata": {	
            "description": "Name of the subnet containing virtual machine for adf IR"	
        }	
    },	
    "vmSubnetCIDR": {	
       "type": "string",	
       "metadata": {	
            "description": "CIDR IP segment for vm subnet"	
        }	
    },
    "project": {
       "type": "string",
       "metadata": {
            "description": "Name of the workstream project for this deployment"
        }
    },
    "application": {
       "type": "string",
       "metadata": {
            "description": "Name of the application for which this deployment is done"
        }
    },
    "keyVauleSkuName": {
       "type": "string",
       "metadata": {
            "description": "Key vault sku name - standard or premium"
        }
    },
    "containerPrefix": {
       "type": "string",
       "metadata": {
            "description": "All container name will start withis prefix"
        }
    },
    "nbrContainers": {
        "type": "int",
        "metadata": {
            "description": "Number of conatiners to create"
        }
    },
    "azADAdmin": {
      "type": "string",
      "metadata": {
        "description": "The AAD administrator email id for the SQL logical server."
      }
    },
    "azADAdminObjectId": {
      "type": "string",
      "metadata": {
        "description": "The AAD administrator object id for the SQL logical server."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2019-Datacenter",
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v3",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "vmName": {
       "type": "string",
       "metadata": {
            "description": "Name of the virtual machine"
        }
    }
  },
  "variables": {
    "sqlPasswordSecretName": "[concat('sqlsecret', parameters('application'), parameters('environment'), parameters('project'))]",
    "kvName":"[concat('kvii', parameters('application'), parameters('environment'), parameters('project'))]",
    "secretName": "[concat(variables('kvName'), '/', variables('sqlPasswordSecretName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2018-05-01",
      "name": "[parameters('rgName')]",
      "location": "[parameters('rgLocation')]",
      "properties": {}
    },
    {
     "type": "Microsoft.Resources/deployments",
     "apiVersion": "2019-10-01",
     "name": "storageDeployment",
     "resourceGroup": "[parameters('rgName')]",
     "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
      ],
     "properties": {
       "mode": "Incremental",
       "templateLink": {
         "uri": "[parameters('storageTemplateUri')]"
       },
       "parameters": {
          "storageAccountName": {
            "value": "[concat('stg', 'ii', parameters('application'), parameters('environment'))]"
          },
          "environmentType": {
            "value": "[parameters('environment')]"
          },
          "rgLocation": {
            "value": "[parameters('rgLocation')]"
          },
          "containerPrefix":{
            "value": "[parameters('containerPrefix')]"
          },
          "nbrContainers": {
            "value": "[parameters('nbrContainers')]"
          }
       }
     }
    },
    {
     "type": "Microsoft.Resources/deployments",
     "apiVersion": "2019-10-01",
     "name": "virtualnetworkdeployment",
     "resourceGroup": "[parameters('rgName')]",
     "dependsOn": [
       "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
     ],
     "properties": {
       "mode": "Incremental",
       "templateLink": {
        "uri": "[parameters('virtualNetworkTemplateUri')]" 
       },
       "parameters": {
         "vnetName": {
           "value": "[parameters('vnetName')]"
         },
         "rgLocation": {
           "value": "[parameters('rgLocation')]"
         },
         "vnetAddressCIDR": {
           "value": "[parameters('vnetAddressCIDR')]"
         },
         "storageprivateLinkSubnetName": {
           "value": "[parameters('storageprivateLinkSubnetName')]"
         },
         "storageprivateLinkSubnetCIDR": {
           "value": "[parameters('storageprivateLinkSubnetCIDR')]"
         },
         "sqlprivateLinkSubnetName": {
           "value": "[parameters('sqlprivateLinkSubnetName')]"
         },
         "sqlprivateLinkSubnetCIDR": {
           "value": "[parameters('sqlprivateLinkSubnetCIDR')]"
         },         
         "vmSubnetName": {
           "value": "[parameters('vmSubnetName')]"
         },
         "vmSubnetCIDR": {
           "value": "[parameters('vmSubnetCIDR')]"
         }
       }
     }
   },
   {
     "type": "Microsoft.Resources/deployments",
     "apiVersion": "2019-10-01",
     "name": "privatelinkdeployment",
     "resourceGroup": "[parameters('rgName')]",
     "dependsOn": [
       "virtualnetworkdeployment"
     ],
     "properties": {
       "mode": "Incremental",
       "templateLink": {
         "uri": "[parameters('privateLinkTemplateUri')]"
       },
       "parameters": {
         "rgLocation": {
           "value": "[parameters('rgLocation')]"
         },
         "privateEndpointName": {
           "value": "[parameters('storageprivateEndpointName')]"
         },
         "privateEndpointConnectionName": {
           "value": "[parameters('storageprivateEndpointConnectionName')]"
         },
         "resourceType": {
           "value": "Microsoft.Storage/storageAccounts"
         },
         "resourceName": {
           "value": "[concat('stg', 'ii', parameters('application'), parameters('environment'))]"
         },
         "vnetName": {
           "value": "[parameters('vnetName')]"
         },
         "subnetName": {
           "value": "[parameters('storageprivateLinkSubnetName')]"
         },
         "groupId": {
           "value": "dfs"
         }
       }
     }
   },
   {
     "type": "Microsoft.Resources/deployments",
     "apiVersion": "2019-10-01",
     "name": "privatednsdeployment",
     "resourceGroup": "[parameters('rgName')]",
     "dependsOn": [
       "virtualnetworkdeployment"
     ],
     "properties": {
       "mode": "Incremental",
       "templateLink": {
         "uri": "[parameters('privateLinkDnsTemplateUri')]"
       },
       "parameters": {
         "serviceAccountName": {
           "value": "[concat('stg', 'ii', parameters('application'), parameters('environment'))]"
         },
         "zoneName":{
           "value": "dfs.core"
         },
         "vnetName": {
           "value": "[parameters('vnetName')]"
         }
       }
     }
   },
   {
     "type": "Microsoft.Resources/deployments",
     "apiVersion": "2019-10-01",
     "resourceGroup": "[parameters('rgName')]",
     "name": "keyvaultdeployment",
     "dependsOn": [
       "virtualnetworkdeployment",
       "privatelinkdeployment"
     ],
     "properties": {
       "mode": "Incremental",
       "templateLink": {
         "uri": "[parameters('keyVaultTemplateUri')]"
       },
       "parameters": {
         "rglocation": {
           "value": "[parameters('rgLocation')]"
         },
         "environment": {
           "value": "[parameters('environment')]"
         },
         "project": {
           "value": "[parameters('project')]"
         },
         "keyVauleSkuName": {
           "value": "[parameters('keyVauleSkuName')]"
         },
         "keyVaultAccessPolicyObjId": {
           "value": "[parameters('keyVaultAccessPolicyObjId')]"
         },
         "sqlPasswordSecretName": {
           "value": "[variables('sqlPasswordSecretName')]"
         },
         "kvName": {
           "value": "[variables('kvName')]"
         }
       }
     }
   },
   {
     "type": "Microsoft.Resources/deployments",
     "apiVersion": "2019-10-01",
     "resourceGroup": "[parameters('rgName')]",
     "name": "sqldatabasedeployment",
     "dependsOn": [
       "keyvaultdeployment"
     ],
     "properties": {
       "mode": "Incremental",
       "templateLink": {
         "uri": "[parameters('sqlDatabaseTemplateUri')]"
       },
       "parameters": {
         "applicationName": {
           "value": "[parameters('application')]"
         },
         "projectName": {
           "value": "[parameters('project')]"
         },
         "environment": {
           "value": "[parameters('environment')]"
         },
         "rgLocation": {
           "value": "[parameters('rgLocation')]"
         },
         "transparentDataEncryption": {
            "value": "Enabled"
         },
         "administratorLoginPassword": {
            // "reference": {
            //   "keyVault": {
            //     //"id": "[concat(subscription().Id, '/resourceGroups/', parameters('rgName'), '/providers/Microsoft.KeyVault/vaults/', variables('kvName'))]"
            //     "id": "[reference('keyvaultdeployment').outputs.rkkeyvault.value]" 
            //   },
            //   "secretName": "[variables('secretName')]"
            // }
            "value": "[concat('IIPrograme@kvsecret',parameters('environment'),parameters('project'),uniqueString(parameters('rgName')))]"
         },
         "azADAdmin": {
           "value": "[parameters('azADAdmin')]"
         },
         "azADAdminObjectId": {
           "value": "[parameters('azADAdminObjectId')]"
         }
       }
     }
   },
   {
     "type": "Microsoft.Resources/deployments",
     "apiVersion": "2019-10-01",
     "name": "sqlprivatelinkdeployment",
     "resourceGroup": "[parameters('rgName')]",
     "dependsOn": [
       "virtualnetworkdeployment",
       "sqldatabasedeployment"
     ],
     "properties": {
       "mode": "Incremental",
       "templateLink": {
         "uri": "[parameters('privateLinkTemplateUri')]"
       },
       "parameters": {
         "rgLocation": {
           "value": "[parameters('rgLocation')]"
         },
         "privateEndpointName": {
           "value": "[parameters('sqlprivateEndpointName')]"
         },
         "privateEndpointConnectionName": {
           "value": "[parameters('sqlprivateEndpointConnectionName')]"
         },
         "resourceType": {
           "value": "Microsoft.Sql/servers"
         },
         "resourceName": {
           "value": "[concat('sqlii', parameters('application'), parameters('environment'), parameters('project'))]"
         },
         "vnetName": {
           "value": "[parameters('vnetName')]"
         },
         "subnetName": {
           "value": "[parameters('sqlprivateLinkSubnetName')]"
         },
         "groupId": {
           "value": "sqlServer"
         }
       }
     }
   },
   {
     "type": "Microsoft.Resources/deployments",
     "apiVersion": "2019-10-01",
     "name": "sqlprivatednsdeployment",
     "resourceGroup": "[parameters('rgName')]",
     "dependsOn": [
       "virtualnetworkdeployment"
     ],
     "properties": {
       "mode": "Incremental",
       "templateLink": {
         "uri": "[parameters('privateLinkDnsTemplateUri')]"
       },
       "parameters": {
         "serviceAccountName": {
           "value": "[concat('sqlii', parameters('application'), parameters('environment'), parameters('project'))]"
         },
         "zoneName":{
           "value": "database"
         },
         "vnetName": {
           "value": "[parameters('vnetName')]"
         }
       }
     }
   },
   {
     "type": "Microsoft.Resources/deployments",
     "apiVersion": "2019-10-01",
     "resourceGroup": "[parameters('rgLocation')]",
     "name": "virtualmachinedeployment",
     "dependsOn": [
       "virtualmachinedeployment",
       "sqldatabasedeployment"
     ],
     "properties": {
       "mode": "Incremental",
       "templateLink": {
         "uri": "[parameters('virtualMachineDeploymentUri')]"
       },
       "parameters": {
         "adminUsername": {
           "value": "[parameters('adminUsername')]"
         },
         "adminPassword": {
           "value": "[parameters('adminPassword')]"
         },
         "windowsOSVersion": {
           "value": "[parameters('windowsOSVersion')]"
         },
         "vmSize": {
           "value": "[parameters('vmSize')]"
         },
         "vmName": {
           "value": "[parameters('vmName')]"
         }
       }
     }
   }
  ],
  "outputs": {
    "rkkeyvaultoutput": {
            "value": "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]",
            "type": "string"
        }
  }
}